<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="OFFSUP" >
  <resultMap id="BaseResultMap" type="com.icss.oa.asserts.pojo.Offsup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 02 16:56:28 CST 2014.
    -->
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="CATEGORY" property="category" jdbcType="VARCHAR" />
    <result column="SPEC" property="spec" jdbcType="VARCHAR" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="COUNT" property="count" jdbcType="DECIMAL" />
    <result column="LOSS" property="loss" jdbcType="DECIMAL" />
  </resultMap>
  <delete id="delete" parameterType="java.lang.Integer" >
    delete from OFFSUP
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.icss.oa.asserts.pojo.Offsup">
    insert into OFFSUP (ID, NAME, CATEGORY, 
      SPEC, PRICE, COUNT, 
      LOSS)
    values (offsup_seq.nextval, #{name,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{spec,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{count,jdbcType=DECIMAL}, 
      0)
  </insert>
  <select id="queryById" parameterType="com.icss.oa.asserts.pojo.Offsup" resultType="java.lang.Integer" >
    select * from OFFSUP where id=#{id,jdbcType=DECIMAL}
  </select>
   <select id="query" parameterType="com.icss.oa.asserts.pojo.Offsup" resultMap="BaseResultMap">
		select * from (select rownum
		rnum,o.* from Offsup o
		order by id desc)
		where rnum between #{start} and #{end}       
		
   </select>
  <update id="update" parameterType="com.icss.oa.asserts.pojo.Offsup" >
    update OFFSUP
    set 
      NAME = #{name,jdbcType=VARCHAR},
      CATEGORY = #{category,jdbcType=VARCHAR},
      SPEC = #{spec,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      COUNT = #{count,jdbcType=DECIMAL},
      LOSS = #{loss,jdbcType=DECIMAL}
      where ID = #{id,jdbcType=DECIMAL}
  </update>
  <select id="getContentCount" resultType="java.lang.Integer">
      select count(*)
      from OFFSUP
  </select>
</mapper>