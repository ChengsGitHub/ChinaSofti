<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="EMP1">

	<resultMap id="BaseResultMap" type="com.icss.oa.emp1.pojo.Emp1">
		<id column="EMP_ID" property="emp1Id" jdbcType="DECIMAL" />
		<result column="EMP_NAME" property="emp1Name" jdbcType="VARCHAR" />
		<result column="USERNAME" property="username" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="EMP_SEX" property="emp1Sex" jdbcType="VARCHAR" />
		<result column="EMP_BIRTHDATE" property="emp1Birthdate"
			jdbcType="DATE" />
		<result column="EMP_EMAIL" property="emp1Email" jdbcType="VARCHAR" />
		<result column="EMP_PHONE" property="emp1Phone" jdbcType="VARCHAR" />
		<result column="EMP_MOBILE" property="emp1Mobile" jdbcType="VARCHAR" />
		<result column="EMP_ADDRESS" property="emp1Address" jdbcType="VARCHAR" />
		<result column="EMP_INFO" property="emp1Info" jdbcType="VARCHAR" />
		<result column="DEPT_ID" property="deptId" jdbcType="DECIMAL" />
		<result column="JOB_ID" property="jobId" jdbcType="DECIMAL" />
		<result column="isvisible" property="isVisible" jdbcType="DECIMAL" />
	</resultMap>

	

	<update id="update" parameterType="com.icss.oa.emp1.pojo.Emp1">
		update EMP
		set EMP_NAME = #{emp1Name,jdbcType=VARCHAR},
		USERNAME = #{username,jdbcType=VARCHAR},
		PASSWORD = #{password,jdbcType=VARCHAR},
		EMP_SEX = #{emp1Sex,jdbcType=VARCHAR},
		EMP_BIRTHDATE = #{emp1Birthdate,jdbcType=DATE},
		EMP_EMAIL = #{emp1Email,jdbcType=VARCHAR},
		EMP_PHONE = #{emp1Phone,jdbcType=VARCHAR},
		EMP_MOBILE = #{emp1Mobile,jdbcType=VARCHAR},
		EMP_ADDRESS = #{emp1Address,jdbcType=VARCHAR},
		EMP_INFO = #{emp1Info,jdbcType=VARCHAR},
		DEPT_ID = #{deptId,jdbcType=DECIMAL},
		JOB_ID = #{jobId,jdbcType=DECIMAL},
		isvisible=0
		where EMP_ID = #{emp1Id,jdbcType=DECIMAL}
	</update>
	
	<select id="queryById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		*
		from EMP e
		where EMP_ID = #{emp1Id,jdbcType=DECIMAL}
		and isvisible=0
	</select>
	
	
	<select id="queryByName" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		*
		from EMP
		where EMP_NAME like '%'|| #{emp1Name,jdbcType=VARCHAR}||'%'
	</select>
	
	<select id="queryByOther" resultType="java.util.Map" parameterType="java.util.Map">
		select * 
		from emp e
		left outer join dept d on e.dept_id=d.dept_id
		left outer join job j on e.job_id=j.job_id
		where isvisible=0
		    <if test="emp1Name!=null and emp1Name!=''">
		        and emp_name like  '%'|| #{emp1Name,jdbcType=VARCHAR}||'%'
		    </if>
		    <if test="deptId!=null and deptId!=''">
		        and d.DEPT_ID =#{deptId,jdbcType=DECIMAL}
		    </if>
		    <if test="jobId!=null and jobId!=''">
		        and j.JOB_ID =#{jobId,jdbcType=DECIMAL}
		    </if>		    
		
	</select>
	
	<select id="query" resultMap="BaseResultMap" parameterType="java.util.Map">
		select * from (select rownum
		rnum,e.* from emp e
		where isvisible = 0) where rnum between
		#{start} and #{end}
	</select>

	<select id="getCount" resultType="java.lang.Integer">
		select
		count(*)
		from emp
		where isvisible=0
	</select>

	<select id="query2" resultType="java.util.Map" parameterType="java.util.Map">
		select * from (select rownum rnum,
		e.emp_id,e.emp_name,d.dept_name,j.job_name
		from emp e
		left outer join dept d on e.dept_id=d.dept_id
		left outer join job j on e.job_id=j.job_id 
		where isvisible=0
		order by emp_id desc)
		where rnum between #{start} and #{end}
	</select>
	<select id="queryByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
	    select * from emp e where e.username=#{username}    
	</select>

</mapper>